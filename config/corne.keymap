/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ____ &trans 

#define U_TAPPING_TERM 200
#define HM_A hm LCTRL A
#define HM_S hm LALT S
#define HM_D hm LGUI D
#define HM_F hm LSHIFT F
#define HM_J hm LSHIFT J
#define HM_K hm LGUI K
#define HM_L hm LALT L
#define HM_SEMI hm LCTRL SEMI

#define BASE   0
#define SYM    1
#define NAV    2
#define NUM    3
#define MEDIA  4
#define FUN    5

#define WN_PND kp HASH
#define WN_AT  kp DQT
#define WN_DQT kp AT
#define WN_HSH kp NON_US_HASH
#define WN_PPE kp PIPE2
#define WN_TLD kp TILDE2 

#define MC_PND kp HASH
#define MC_AT  kp DQT
#define MC_DQT kp AT
#define MC_HSH kp LA(N3)
#define MC_PPE kp PIPE
#define MC_TLD kp TILDE 



/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {
                        label = "Base";
// -----------------------------------------------------------------------------------------
// |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
// | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
                        bindings = <
   &kp TAB   &kp Q  &kp W  &kp E          &kp R        &kp T        /**/  &kp Y         &kp U    &kp I         &kp O    &kp P     &kp BSPC
   &kp LCTRL &HM_A  &HM_S  &HM_D          &HM_F        &kp G        /**/  &kp H         &HM_J    &HM_K         &HM_L    &HM_SEMI  &kp SQT
   &kp LSHFT &kp Z  &kp X  &kp C          &kp V        &kp B        /**/  &kp N         &kp M    &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                           &lt MEDIA ESC  &lt NUM RET  &lt NAV TAB  /**/  &lt SYM BSPC  &kp SPC  &lt FUN DEL
                        >;
                };
                
                symbol_layer {
                        label="Symbol";

// -----------------------------------------------------------------------------------------
// |  `   |  @  |  &  |  #  |  ~  |  (  |   |  )  |      |     |     |     |      |
// |      |     |  |  |  !  |  ?  |  {  |   |  }  |      |     |     |     |      |
// |      |     |     |  $  |  Â£  |  [  |   |  ]  |      |     |     |     |      |
//                    |     |  _  |  "  |   |     |      |     |
                        bindings = <
   &kp GRAVE  &MC_AT  &kp AMPS &MC_HSH  &MC_TLD   &kp LPAR  /**/    &kp RPAR ____    ____    ____    ____    ____    
   ____       ____    &MC_PPE  &kp EXCL &kp QMARK &kp LBRC  /**/    &kp RBRC ____    ____    ____    ____    ____    
   ____       ____    ____     &kp DLLR &MC_PND   &kp LBKT  /**/    &kp RBKT ____    ____    ____    ____    ____    
                               ____     &kp UNDER &MC_DQT   /**/    ____     ____    ____    
                        >;
                };
                
//                 nav_layer {
//                         label="Nav";
// // -----------------------------------------------------------------------------------------
// // |      |     |     |     |     |     |   |     |      |     |     |     |      |
// // |      |     |     |     |     |     |   |     |      |     |     |     |      |
// // |      |     |     |     |     |     |   |     |      |     |     |     |      |
// //                    |     |     |     |   |     |      |     |
//                         bindings = <
//    ____    ____    ____    ____    ____    ____    /**/    &kp LC(B) ____     ____   ____      ____  ____    
//    ____    ____    ____    ____    ____    ____    /**/    &kp LEFT  &kp DOWN &kp UP &kp RIGHT ____  ____   
//    ____    ____    ____    ____    ____    ____    /**/    &kp LC(F)      ____     ____   ____      ____    ____    
//                            ____    ____    ____    /**/    ____      ____     ____    
//                         >;
//                 };
                
                trans_layer {
                        label="Trans";
// -----------------------------------------------------------------------------------------
// |      |     |     |     |     |     |   |     |      |     |     |     |      |
// |      |     |     |     |     |     |   |     |      |     |     |     |      |
// |      |     |     |     |     |     |   |     |      |     |     |     |      |
//                    |     |     |     |   |     |      |     |
                        bindings = <
   ____    ____    ____    ____    ____    ____    /**/    ____    ____    ____    ____    ____    ____    
   ____    ____    ____    ____    ____    ____    /**/    ____    ____    ____    ____    ____    ____    
   ____    ____    ____    ____    ____    ____    /**/    ____    ____    ____    ____    ____    ____    
                           ____    ____    ____    /**/    ____    ____    ____    
                        >;
                };
                
        };
};

/ {
  behaviors {
    hm: homerow_mods {
      compatible = "zmk,behavior-hold-tap";
      label = "HOMEROW_MODS";
      #binding-cells = <2>;
      tapping_term_ms = <U_TAPPING_TERM>;
      flavor = "tap-preferred";
      bindings = <&kp>, <&kp>;
    };
  };
};
